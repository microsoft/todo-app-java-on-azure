<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.microsoft.azure</groupId>
    <artifactId>todo-app-java-on-azure</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>todo-app-java-on-azure</name>
    <description>A todo list application uses AngularJS and Azure DocumentDB Spring boot starter</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.8.RELEASE</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.build.timestamp.format>yyMMddHHmmssSSS</maven.build.timestamp.format>

        <!-- dependency versions -->
        <java.version>1.8</java.version>
        <plugin.fmp.version>3.5.30</plugin.fmp.version>
        <plugin.spotify.version>0.4.11</plugin.spotify.version>
        <plugin.azure.webapp.version>0.1.3</plugin.azure.webapp.version>

        <!-- configurable properties -->
        <docker.image.prefix>put-your-docker-registry-url</docker.image.prefix>
        <azure.resourceGroup.name>${WEBAPP_RESOURCEGROUP_NAME}</azure.resourceGroup.name>
        <azure.app.name>${WEBAPP_NAME}</azure.app.name>

        <!-- where to start running the app -->
        <start-class>com.microsoft.azure.sample.TodoApplication</start-class>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.microsoft.azure</groupId>
                <artifactId>azure-spring-boot-bom</artifactId>
                <version>0.2.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>azure-documentdb-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- use embedded servlet container -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${plugin.spotify.version}</version>
                <configuration>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                    </imageTags>
                    <baseImage>java</baseImage>
                    <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <registryUrl>https://${docker.image.prefix}</registryUrl>
                    <serverId>${docker.image.prefix}</serverId>
                </configuration>
            </plugin>

            <!--*************************************************-->
            <!-- Deploy to Kubernetes on Azure Container Service -->
            <!--*************************************************-->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${plugin.fmp.version}</version>
                <configuration>
                    <ignoreServices>false</ignoreServices>
                    <registry>${docker.image.prefix}</registry>
                </configuration>
            </plugin>

            <!--*************************************************-->
            <!-- Deploy to Azure Web App for Containers          -->
            <!--*************************************************-->
            <!--
            <plugin>
                <groupId>com.microsoft.azure</groupId>
                <artifactId>azure-webapp-maven-plugin</artifactId>
                <version>${plugin.azure.webapp.version}</version>
                <configuration>
                    <resourceGroup>java-on-azure</resourceGroup>
                    <appName>${azure.app.name}</appName>
                    <region>westus</region>
                    <pricingTier>s1</pricingTier>
                    <containerSettings>
                        <imageName>${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
                        <registryUrl>https://${docker.image.prefix}</registryUrl>
                        <serverId>${docker.image.prefix}</serverId>
                    </containerSettings>
                    <appSettings>
                        <property>
                            <name>PORT</name>
                            <value>8080</value>
                        </property>
                    </appSettings>
                </configuration>
            </plugin>
            -->

            <!--*************************************************-->
            <!-- Deploy to tomcat on localhost                   -->
            <!--*************************************************-->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.6.7</version>
                <configuration>
                    <container>
                        <containerId>tomcat8x</containerId>
                        <type>installed</type>
                        <home>${TOMCAT_HOME}</home>
                    </container>
                    <configuration>
                        <type>existing</type>
                        <home>${TOMCAT_HOME}</home>
                    </configuration>
                </configuration>
            </plugin>

            <!--*************************************************-->
            <!-- Deploy to Tomcat on Azure App Service Linux          -->
            <!--*************************************************-->
            <plugin>
                <groupId>com.microsoft.azure</groupId>
                <artifactId>azure-webapp-maven-plugin</artifactId>
                <version>1.1.0</version>
                <configuration>
                    <resourceGroup>${azure.resourceGroup.name}</resourceGroup>
                    <appName>${azure.app.name}</appName>
                    <region>westus</region>
                    <pricingTier>S3</pricingTier>
                    <linuxRuntime>tomcat 8.5-jre8</linuxRuntime>
                    <deploymentType>war</deploymentType>

                    <resources>
                        <resource>
                            <!-- Where your artifacts are stored -->
                            <directory>${project.basedir}/target</directory>
                            <!-- Relative path to /site/wwwroot/ -->
                            <targetPath>.</targetPath>
                            <includes>
                                <include>*.war</include>
                            </includes>
                        </resource>
                    </resources>

                    <appSettings>
                        <property>
                            <name>DOCUMENTDB_URI</name>
                            <value>${DOCUMENTDB_URI}</value>
                        </property>
                        <property>
                            <name>DOCUMENTDB_KEY</name>
                            <value>${DOCUMENTDB_KEY}</value>
                        </property>
                        <property>
                            <name>DOCUMENTDB_DBNAME</name>
                            <value>${DOCUMENTDB_DBNAME}</value>
                        </property>
                    </appSettings>

                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>${project.basedir}/checkstyle.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <failOnViolation>true</failOnViolation>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <resourceIncludes>**/*</resourceIncludes>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <linkXRef>false</linkXRef>
                </configuration>
                <inherited>true</inherited>
            </plugin>
        </plugins>
    </build>
</project>
