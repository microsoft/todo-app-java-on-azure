# Description
# ===========
# This plabyook build a docker image, then push to azure container registry, 
# then provision an azure container instance with that image.
# 1. clone a sample helloworld app
# 1. create azure container registery
# 1. build docker image from helloworld app, and push image to azure container azure container registry
# 1. create azure container instance with the image in azure container registry
#
# Prequisite
# ===========
# - git
# - Docker
# - Maven

- hosts: localhost
  vars_files:
  - aci_vars.yml
  
  tasks:
    - include: get_dbtoken.yml
    
    - name: Removing
      file:
        path: "{{ workspace }}"
        state: absent

    - name: Git Clone
      git:
        repo: "{{ repo_url }}"
        dest: "{{ workspace }}"
      
    - name: update uri
      lineinfile:
        dest: "{{ workspace }}/src/main/resources/application.properties"
        regexp: '^azure.documentdb.uri='
        line: "{{ dburi }}"

    - name: update key
      lineinfile:
        dest: "{{ workspace }}/src/main/resources/application.properties"
        regexp: '^azure.documentdb.key='
        line: "{{ dbkey }}"

    - name: update db name
      lineinfile:
        dest: "{{ workspace }}/src/main/resources/application.properties"
        regexp: '^azure.documentdb.database='
        line: "{{ dbstring }}"

    - name: Build sample app
      shell: mvn package chdir="{{ workspace }}"
      
    - name: Get Azure Container Registry Password
      azure_rm_containerregistry:
        resource_group: "{{ resource_group }}"
        name: "{{ registry_name}}"
        admin_user_enabled: True
        sku: Standard
      register: acr_result
    
    - name: Login docker registry
      docker_login:
        registry: "{{ registry_name }}.azurecr.io"
        username: "{{ registry_name }}"
        password: "{{ acr_result.credentials.password }}"
        email: "{{ email }}"
    
    - name: Docker Build and Push
      docker_image:
        path: "{{ workspace }}"
        name: "{{ registry_name }}.azurecr.io/{{ image_name }}"
        push: yes
    
    - name: Create Azure Container Instance
      azure_rm_containerinstance:
        resource_group: "{{ resource_group }}"
        name: "{{ image_name }}"
        ip_address: public
        ports:
          - "{{ http_port }}"
        registry_login_server: "{{ registry_name }}.azurecr.io"
        registry_username: "{{ registry_name }}"
        registry_password: "{{ acr_result.credentials.password }}"
        containers:
          - name: "{{ image_name }}"
            ports:
              - "{{ http_port }}"
            image: "{{ registry_name }}.azurecr.io/{{ image_name }}"